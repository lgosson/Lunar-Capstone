@model LunarLogicServices.Models.Contact
@{
    ViewBag.Title = "Services";
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Lunar Logic Services</title>
    <script src="~/Scripts/modernizr-2.6.2.js"></script>
    <script src="~/Scripts/jquery.min.js"></script>
    <script src="~/Scripts/arbor.js"></script>
    <script src="~/Scripts/arbor-tween.js"></script>
    <script src="~/Scripts/graphics.js"></script>
    <script src="~/Scripts/renderer.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/Styles.css" rel="stylesheet" />
</head>
<body style="background: linear-gradient(darkblue, black)">

    <div class="container-fluid">
        <div style="margin-left:200px"><a href="http://lunarlogic.com"><img src="~/Images/logo.png" /></a></div>
        <div class="row">
        <div class="col-md-2">
            @Html.Partial("_ServiceInformation")
        </div>
        <div class="col-md-8"><canvas id="viewport" width="1200" height="850"></canvas></div>
        <div id="serviceinfo" class="col-md-2">
            @Html.Partial("_PersonalPlan")
        </div>
    </div>
        
    </div>

    <script type="text/javascript">

        (function () {
            var serviceData;
            $.ajax({
                url: '@Url.Action("GetServiceData", "Services")',
                type: "GET",
                contenttype: 'json',
                success: function (result) {
                    graphSetup(result);
                }
            });
        })()

        function graphSetup(result) {
            var sys = arbor.ParticleSystem(50, 1000, .5);
            sys.parameters({ gravity: true });
            sys.renderer = Renderer("#viewport");

            for (i = 0; i < result.length; i++) {
                sys.addNode(result[i].Name, {
                    'color': 'red',
                    'shape': 'dot',
                    label: result[i].Name,
                    desc: result[i].Description,
                    'selectable': result[i].Selectable,
                    'connected': result[i].ConnectedServices,
                    'selected': 'n'
                });
            }

            for (i = 0; i < result.length; i++) {

                for (j = 0; j < result[i].ConnectedServices.length; j++) {
                    sys.addEdge(result[i].Name, result[i].ConnectedServices[j]);
                }
            }
            sys.graft();
        }

    </script>
</body>
</html>