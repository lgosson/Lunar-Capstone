@model LunarLogicServices.Models.ContactModel
@{
    ViewBag.Title = "Services";
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Lunar</title>

    <script src="~/Scripts/modernizr-2.6.2.js"></script>
    <script src="~/Scripts/jquery.min.js"></script>
    <script src="~/Scripts/arbor.js"></script>
    <script src="~/Scripts/arbor-tween.js"></script>
    <script src="~/Scripts/graphics.js"></script>
    <script src="~/Scripts/renderer.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />

    <style type="text/css">
        label {
            float: left;
            width: 100px;
            text-align: right;
            margin-top: 8px;
            clear: left;
            color: red;
        }
        input, textarea { margin-top: 8px; float: left; }
        #submit{
            margin-left: 100px;
        }
    </style>

</head>
<body style="background: linear-gradient(darkblue, black)">

    <div class="container-fluid">
        <div style="margin-left:200px"><a href="http://lunarlogic.com"><img src="~/Images/logo.png" /></a></div>
        <div class="row">
            <div class="col-md-2">
                <br /><h2 style="color: red">Contact Form</h2>
                @using (Html.BeginForm())
                {
                    <div class="row">
                        @Html.LabelFor(model => Model.FirstName, "First Name:")
                        @Html.EditorFor(model => model.FirstName)
                    </div>
                    <div class="row">
                        @Html.LabelFor(model => Model.LastName, "Last Name:")
                        @Html.EditorFor(model => model.LastName)
                    </div>
                    <div class="row">
                        @Html.LabelFor(model => Model.Phone, "Phone:")
                        @Html.EditorFor(model => model.Phone)
                    </div>
                    <div class="row">
                        @Html.LabelFor(model => Model.Email, "Email:")
                        @Html.EditorFor(model => model.Email)
                    </div>
                    <div class="row">
                        @Html.LabelFor(model => Model.Comment, "Comments:")
                        @Html.TextAreaFor(mode => Model.Comment)
                    </div>
                    <div class="row" id="submit">
                        <input type="submit" value="Submit" class="btn btn-primary" />
                        <input type="reset" value="Reset" class="btn btn-primary" />
                    </div>
                }
                <div><span id="nodeselect" style="color: red; font-size:18px"></span></div>
            </div>
            <div class="col-md-8"><canvas id="viewport" width="1300" height="850"></canvas></div>
            <div class="col-md-2"><h2 style="color: red">Selected service<br /><br /><span id="service"></span></h2></div>
        </div>
    </div>

    <script type="text/javascript">

        (function () {
            var serviceData;
            $.ajax({
                url: '@Url.Action("GetServiceData", "Services")',
                type: "GET",
                contenttype: 'json',
                success: function (result) {
                    graphSetup(result);
                }
            });
        })()

        function graphSetup(result) {
            var sys = arbor.ParticleSystem(100, 1000, .5);
            sys.parameters({ gravity: true });
            sys.renderer = Renderer("#viewport");

            for (i = 0; i < result.length; i++) {
                sys.addNode(result[i].Name, { 'color': 'red', 'shape': 'dot', label: result[i].Name, desc: result[i].Description, 'parents': result[i].ParentServices, 'selected': 'n' });
            }

            for (i = 0; i < result.length; i++) {

                for (j = 0; j < result[i].ConnectedServices.length; j++) {
                    sys.addEdge(result[i].Name, result[i].ConnectedServices[j]);
                }
            }
            sys.graft();
        }

    </script>
</body>
</html>